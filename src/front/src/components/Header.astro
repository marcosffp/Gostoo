---
import { Icon } from "astro-icon/components";
---

<header>
  <abbr title="Gostô?">
    <img src="/10-removed.png" alt="logo" onclick="window.location = '/'" />
  </abbr>
  <nav class="nav">
    <ul>
      <li>
        <abbr title="Perfil">
          <Icon
            name="solar:user-bold"
            size={30}
            color="rgb(var(--second-color))"
            class="icon"
            id="perfil-link"
          />
        </abbr>
      </li>
      <li>
        <abbr title="Logout">
          <Icon
            name="solar:logout-outline"
            size={30}
            color="rgb(var(--second-color))"
            class="icon"
            id="logout-button"
          />
        </abbr>
      </li>
      <li>
        <abbr title="Descobrir">
          <Icon
            onclick="window.location = '/descubra'"
            name="solar:map-point-search-outline"
            size={30}
            color="rgb(var(--second-color))"
            class="icon"
            id="discover-button"
          />
        </abbr>
      </li>
    </ul>
  </nav>
</header>

<script>
  import Cookies from "js-cookie"; // Importando js-cookie
  import {jwtDecode} from "jwt-decode"; // Importando jwt-decode

  const token = Cookies.get("token");

  // Botão de perfil
  document
    .getElementById("perfil-link")
    .addEventListener("click", function (e) {
      e.preventDefault();

      if (!token) {
        // Se não houver token, redireciona para a página de login
        window.location.href = "/login";
        return;
      }

      try {
        interface JwtPayload {
          type: number;
          sub: string;
          iat: number;
          exp: number;
          id: number;
        }

        const decodedToken: JwtPayload = jwtDecode(token);
        const type = decodedToken.type;
        const email = decodedToken.sub;
        const exp = decodedToken.exp;
        const id = decodedToken.id;
        const currentTime = Math.floor(Date.now() / 1000); // Tempo atual em segundos

        if (exp < currentTime){
          window.location.href = "/login";
          Cookies.remove("token");
        } else {
          window.location.href = `/perfil/${type != 1 ? "avaliador" : "estabelecimento"}/${email}${type == 1 ? '?establishmentId=' + id : ''}`;
        }
      } catch (error) {
        console.error("Erro ao verificar o token:", error);
        window.location.href = "/login";
      }
    });
  
  // Botão de logout - Renderizado com base no estado do user
  const logout_button = document.getElementById("logout-button");

  if(!token) logout_button.classList.add('hidden');
  else logout_button.classList.remove('hidden');

  logout_button.addEventListener("click", () => {
    Cookies.remove("token");
    window.location.href = "/login";
  })

</script>

<style>
  header {
    padding: 10px 30px;
    background-color: #1111118c;
    display: flex;
    justify-content: space-between;
    font-family: "Open Sans", sans-serif;
    font-weight: 600;
    width: 100%;
    position: absolute;
    z-index: 10;

    & img {
      height: 4rem;
      -webkit-transition: 300ms;
    }

    & img:hover {
      transform: scale(1.1);
      -webkit-transition: ease-in 300ms;
    }

    & .nav > ul {
      list-style-type: none;
      padding: 0;
      width: 100%;
      height: 100%;
      display: flex;
      flex-direction: row-reverse;
      align-items: center;
      justify-content: space-evenly;

      & .icon {
        @apply ml-4
      }

      & .icon:hover {
        cursor: pointer;
        color: rgba(var(--support-color), 0.911);
        -webkit-transition: 300ms;
      }
    }
  }
</style>
